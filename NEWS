  February 16, 2010
============================================

Release 1.2.5

There have been several requests to add support for focus icons to bb-ant-tools.
This is a feature that was added in JDE 4.7.  Previous version of the JDE/rapc
compiler DO NOT support setting focus icons at compile time, instead, they must
be set dynamically at runtime.

The new syntax looks like this:
<rapc ...>
   <jdp icon="icon.png" focusIcon="focus.png" />
</rapc>

Note 1: the path to the image file is relative to the directory that the rapc
compile is executed under.  If you compile in a sub-directory of your project
be sure to adjust the path appropriately, example:

<rapc destdir="build">
   <jdp icon="../img/icon.png" />
</rapc>

Note 2: for some crazy reason, RIM's JDE supports setting multiple icons for
a given entry point (I have yet to figure out what purpose this has).  To set
multiple icons with bb-ant-tools, the syntax is as follows:

<rapc ...>
   <jdp icon="icon1.png,icon2.png" focusIcon="focus1.png,focus2.png" />
</rapc>


  March 11, 2009
============================================

Release 1.2.1

This is a bugfix release that deserves some attention.  The <alx> task had
several flaws in the way it was generating XML.  Basically I had it all wrong.

Neil Sainsbury has sent in a patch that corrects this.  An explanation of the
issue from his email:

Currently alxtool produces for each codSet output of the form:
<directory _blackberryVersion="[4.2,4.6)">4.2</directory>
<fileset Java="1.0">
    <files>
        myapp.cod
    </files>
</fileset>

The output should actually be of the form:
<fileset Java="1.0" _blackberryVersion="[4.2,4.6)">
    <directory>4.2</directory>
    <files>
        myapp.cod
    </files>
</fileset>


  March 9, 2009
============================================

Release 1.2.0

After some back and forth with Neil Sainsbury, it was apparent that some
mechanism was required for changing properties (key/value fields) writen
to .jad files created by the <jadtool> task.  One possible use case is to
change the MIDlet-Name field which controls the product name visible on the
device in Options->Applications.

A new nested attribute of the <jadtool> task name <override> has been defined.
See the README file or the website for syntax details.


  February 10, 2009
============================================

Release 1.1.0

Jeremy Wall has submitted several bug fixes and new features.  The feature set
seems significant enough to increment the minor version digit.

 + <entry> alternate entry points can be conditionally compiled
 + <application> when generating .alx files, both application and codset tags
   now support BlackBerry OS version matching expressions
 
 * fixed bad formatting in SHA hash when generating .jad files
 * always include name, description, version, vendor, copyright child tags
   when generating application tag in .alx files to avoid problems with loader
 * corrected inclusive and exclusive brackets for BlackBerry version matching


  December 4, 2008
============================================

Ready to release 1.0.0.  Here is a breakdown of the changes:

 + <alx> new task, generates .alx file and copy .cod files
 + <jadtool> new task, update .jad file and extract sibling .cod files

 * Removed <cod> nested element from <sigtool>.  The <sigtool> task can
   now accept resource collection types (fileset, filelist) as direct
   nested elements.
 * Added support to the <rapc> task for generating a text file listing
   all the source files and passing said file to the rapc compiler.  This
   is a workaround for an error that can occur on Windows operating system
   when building a project with many files or long pathnames.



  November 30, 2008
============================================
BB-Ant-Tools is poised to undergo some enhancements.  I am working on adding
two more ant tasks:

 * <alx> - generate .alx file, and corresponding directory structure
 * <jadrewrite> - updates .jad file with new set of .cod files

In addition, the rapc task will get support for selecting source files from
a text file containing a list of source files.  This will make compiling
large projects on the Windows platform possible as Windows has a limitation
on the length of a command line, thus currently limiting the number of files
that can be specified by the rapc task.

The version numbering scheme has changed as well.  The next release will be
marked 1.0.0 with following releases incrementing the minor version (1.x.0)
for minor functionality changes, and the patch version (1.0.x) for bug fix
releases.
